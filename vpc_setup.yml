- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import variable file
      include_vars: vars/variables

    - name: Creating VPC for our web Web_stack_vpc
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{VpcCidr}}"
        region: "{{REGION}}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: present
      register: vpc_out

    - name: Creating Public Subnet1 in Zone1
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{REGION}}"
        az: "{{ZONE1}}"
        state: present
        cidr: "{{PubSub1Cidr}}"
        map_public: yes
        resource_tags: 
          Name: WebStack_PubSub1
      register: PubSub1_out
    - name: Creating Public Subnet2 in Zone2
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{REGION}}"
        az: "{{ZONE2}}"
        state: present
        cidr: "{{PubSub2Cidr}}"
        map_public: yes
        resource_tags: 
          Name: WebStack_PubSub2
      register: PubSub2_out
    - name: Creating Public Subnet3 in Zone3
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{REGION}}"
        az: "{{ZONE3}}"
        state: present
        cidr: "{{PubSub3Cidr}}"
        map_public: yes
        resource_tags: 
          Name: WebStack_PubSub3
      register: PubSub3_out

    - name: Creating Private Subnet1 in Zone1
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{REGION}}"
        az: "{{ZONE1}}"
        state: present
        cidr: "{{PrivSub1Cidr}}"
        map_public: yes
        resource_tags: 
          Name: WebStack_PrivSub1
      register: PrivSub1_out
    - name: Creating Private Subnet2 in Zone2
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{REGION}}"
        az: "{{ZONE2}}"
        state: present
        cidr: "{{PrivSub2Cidr}}"
        map_public: yes
        resource_tags: 
          Name: WebStack_PrivSub2
      register: PrivSub2_out
    - name: Creating Private Subnet3 in Zone3
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{REGION}}"
        az: "{{ZONE3}}"
        state: present
        cidr: "{{PrivSub3Cidr}}"
        map_public: yes
        resource_tags: 
          Name: WebStack_PrivSub3
      register: PrivSub3_out

    - name: Creating Internet Gateway
      ec2_vpc_igw:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{REGION}}"
        state: present
        resource_tags:
          Name: WebStack_IGW
      register: igw_out

    - name: Creating route table for public Subnet1
      ec2_vpc_route_table:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{REGION}}"
        tags:
          Name: WebStack_Route_table
        subnets:
          - "{{PubSub1_out.subnet.id}}"
          - "{{PubSub2_out.subnet.id}}"
          - "{{PubSub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{igw_out.gateway_id}}"
      register: PubRT_out

    - name: Creating a nat gateway and assigning elastic Ip
      ec2_vpc_nat_gateway:
        state: present
        region: "{{REGION}}"
        subnet_id: "{{PubSub1_out.subnet.id}}"
        wait: yes
        if_exist_do_not_create: true
      register: NATGW_out
      
    - name: Creating a private subnet route table
      ec2_vpc_route_table: 
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{REGION}}"
        tags:
          Name: WebStack_rotue_table
        subnets:
          - "{{PrivSub1_out.subnet.id}}"
          - "{{PrivSub2_out.subnet.id}}"
          - "{{PrivSub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{NATGW_out.nat_gateway_id}}"
      register: PrivRT_out
    - debug: 
        var: "{{item}}"
      loop:
        - vpc_out.vpc.id
        - PubSub1_out.subnet.id
        - PubSub2_out.subnet.id
        - PubSub3_out.subnet.id
        - PrivSub1_out.subnet.id
        - PrivSub2_out.subnet.id
        - PrivSub3_out.subnet.id
        - igw_out.gateway_id
        - PubRT_out.route_table.id
        - NATGW_out.nat_gateway_id
        - PrivRT_out.route_table.id
    - set_fact:
          vpcid: "{{vpc_out.vpc.id}}"
          pubsub1id: "{{PubSub1_out.subnet.id}}"
          pubsub2id: "{{PubSub2_out.subnet.id}}"
          pubsub3id: "{{PubSub3_out.subnet.id}}"
          privsub1id: "{{PrivSub1_out.subnet.id}}"
          privsub2id: "{{PrivSub2_out.subnet.id}}"
          privsub3id: "{{PrivSub3_out.subnet.id}}"
          igwid: "{{igw_out.gateway_id}}"
          pubRTid: "{{PubRT_out.route_table.id}}"
          NATGWid: "{{NATGW_out.nat_gateway_id}}"
          privRTid: "{{PrivRT_out.route_table.id}}"
          cacheable: yes
    - name: Create Variable file for the vpc output id
      copy:
          content: "vpcid: {{vpc_out.vpc.id}}\npubsub1id: {{PubSub1_out.subnet.id}}\npubsub2id: {{PubSub2_out.subnet.id}}\npubsub3id: {{PubSub3_out.subnet.id}}\nprivsub1id: {{PrivSub1_out.subnet.id}}\nprivsub2id: {{PrivSub2_out.subnet.id}}\nprivsub3id: {{PrivSub3_out.subnet.id}}\nigwid: {{igw_out.gateway_id}}\npubRTid: {{PubRT_out.route_table.id}}\nNATGWid: {{NATGW_out.nat_gateway_id}}\nprivRTid: {{PrivRT_out.route_table.id}}"
          dest: vars/output_vars

      

      






